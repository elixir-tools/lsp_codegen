# codegen: do not edit
defmodule GenLSP.TypeAlias.<%= @type_alias.name %> do<%= if @type_alias.documentation do %>
  @moduledoc """
  <%= String.replace(@type_alias.documentation, "\n", "\n  ") %>
  """<% end %>

  import Schematic, warn: false

  @type t :: <%= case @type_alias.name do %>
    <% "LSPAny" -> %>any()
    <% "LSPObject" -> %>%{String.t() =>  any()}
    <% "LSPArray" -> %>list(any())
    <% _ -> %><%= LSPCodegen.Codegen.to_string(@type_alias.type, @metamodel) %>
    <% end %>

  @doc false
  @spec schematic() :: Schematic.t()
  def schematic() do
    <%= case @type_alias.name do %>
    <% "LSPAny" -> %>any()
    <% "LSPObject" -> %>map(keys: str(), values: any())
    <% "LSPArray" -> %>list(any())
    <% _ -> %><%= LSPCodegen.Schematic.to_string(@type_alias.type, @metamodel) %>
    <% end %>
  end
end
